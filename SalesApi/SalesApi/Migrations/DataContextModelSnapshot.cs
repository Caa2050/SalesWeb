// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesApi.Data;

#nullable disable

namespace SalesApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesApi.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Books"
                        });
                });

            modelBuilder.Entity("SalesApi.Models.SalesRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("SalesRecord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 200.0,
                            Date = new DateTime(2018, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 300.0,
                            Date = new DateTime(2018, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 400.0,
                            Date = new DateTime(2018, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerId = 3,
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            Amount = 500.0,
                            Date = new DateTime(2019, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerId = 4,
                            Status = 1
                        });
                });

            modelBuilder.Entity("SalesApi.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BaseSalary")
                        .HasColumnType("float");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Seller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseSalary = 3200.0,
                            BirthDate = new DateTime(1998, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "bob@gmail.com",
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 2,
                            BaseSalary = 2000.0,
                            BirthDate = new DateTime(1993, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "carl@gmail.com",
                            Name = "Carl"
                        },
                        new
                        {
                            Id = 3,
                            BaseSalary = 4000.0,
                            BirthDate = new DateTime(1990, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "nick@gmail.com",
                            Name = "Nick"
                        },
                        new
                        {
                            Id = 4,
                            BaseSalary = 2500.0,
                            BirthDate = new DateTime(2000, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "kate@gmail.com",
                            Name = "Kate"
                        });
                });

            modelBuilder.Entity("SalesApi.Models.SalesRecord", b =>
                {
                    b.HasOne("SalesApi.Models.Seller", "Seller")
                        .WithMany("SalesRecord")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("SalesApi.Models.Seller", b =>
                {
                    b.HasOne("SalesApi.Models.Department", "Department")
                        .WithMany("Sellers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SalesApi.Models.Department", b =>
                {
                    b.Navigation("Sellers");
                });

            modelBuilder.Entity("SalesApi.Models.Seller", b =>
                {
                    b.Navigation("SalesRecord");
                });
#pragma warning restore 612, 618
        }
    }
}
